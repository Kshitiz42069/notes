{"ast":null,"code":"var _jsxFileName = \"/Users/daisuke/web dev/Notes app/notes/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Noteslist from \"./components/Noteslist\";\nimport { nanoid } from 'nanoid';\nimport Search from \"./components/Search\";\nimport Header from \"./components/header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([{\n    id: nanoid(),\n    text: \"this is my first note\",\n    date: \"15/10/23\"\n  }, {\n    id: nanoid(),\n    text: \"this is my second note\",\n    date: \"17/10/23\"\n  }, {\n    id: nanoid(),\n    text: \"this is my another note\",\n    date: \"19/10/23\"\n  }, {\n    id: nanoid(),\n    text: \"this is my I forgot note\",\n    date: \"21/10/23\"\n  }, {\n    id: nanoid(),\n    text: \"this is my that one note\",\n    date: \"23/10/23\"\n  }]);\n  const [searchText, SetSearchText] = useState('');\n  const [darkMode, SetDarkMode] = useState(false);\n  useEffect(() => {}, []);\n  const addnote = text => {\n    const date = new Date();\n    const newnote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    const newnotes = [...notes, newnote];\n    setNotes(newnotes);\n  };\n  const deletenote = id => {\n    const newnotes = notes.filter(note => note.id !== id);\n    setNotes(newnotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkMode && 'darkmode'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleDarkMode: SetDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        handleSearchNote: SetSearchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Noteslist, {\n        notes: notes.filter(note => note.text.toLowerCase().includes(searchText.toLowerCase())),\n        handleaddnote: addnote,\n        handledeletenote: deletenote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Lhv+4Ik6z7qLdAQnM5b77+H5TpQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Noteslist","nanoid","Search","Header","jsxDEV","_jsxDEV","App","_s","notes","setNotes","id","text","date","searchText","SetSearchText","darkMode","SetDarkMode","addnote","Date","newnote","toLocaleDateString","newnotes","deletenote","filter","note","className","children","handleDarkMode","fileName","_jsxFileName","lineNumber","columnNumber","handleSearchNote","toLowerCase","includes","handleaddnote","handledeletenote","_c","$RefreshReg$"],"sources":["/Users/daisuke/web dev/Notes app/notes/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Noteslist from \"./components/Noteslist\";\nimport {nanoid} from 'nanoid';\nimport Search from \"./components/Search\";\nimport Header from \"./components/header\";\n\n\nconst App=()=> {\n  const [notes,setNotes] = useState([\n    {\n    id: nanoid(),\n    text: \"this is my first note\",\n    date: \"15/10/23\"\n    },\n    {\n    id: nanoid(),\n    text: \"this is my second note\",\n    date: \"17/10/23\"\n    },\n    {\n    id: nanoid(),\n    text: \"this is my another note\",\n    date: \"19/10/23\"\n    },\n    {\n    id: nanoid(),\n    text: \"this is my I forgot note\",\n    date: \"21/10/23\"\n    },\n    {\n    id: nanoid(),\n    text: \"this is my that one note\",\n    date: \"23/10/23\"\n    }\n  ]);\n\n  const [searchText, SetSearchText]= useState('');\n\n  const [darkMode,SetDarkMode] = useState(false);\n\n  useEffect(()=>{\n\n  },[])\n\n  const addnote =(text)=>{\n    const date = new Date();\n    const newnote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    };\n    const newnotes = [...notes,newnote];\n    setNotes(newnotes);\n  };\n  const deletenote = (id) =>{\n    const newnotes = notes.filter((note)=>note.id !== id);\n    setNotes(newnotes);\n  };\n\n  return (\n    <div className={`${darkMode && 'darkmode'}`}>\n      <div className=\"container\">\n      <Header\n        handleDarkMode = {SetDarkMode}\n      />\n      <Search\n        handleSearchNote={SetSearchText}\n      />\n      <Noteslist\n        notes={notes.filter((note)=>note.text.toLowerCase().includes(searchText.toLowerCase()))}\n        handleaddnote={addnote}\n        handledeletenote = {deletenote}\n      />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}