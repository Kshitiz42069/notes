{"ast":null,"code":"var _jsxFileName = \"/Users/daisuke/web dev/Notes app/notes/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Noteslist from \"./components/Noteslist\";\nimport { nanoid } from 'nanoid';\nimport Search from \"./components/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([{\n    id: nanoid(),\n    text: \"this is my first note\",\n    date: \"15/10/23\"\n  }, {\n    id: nanoid(),\n    text: \"this is my second note\",\n    date: \"17/10/23\"\n  }, {\n    id: nanoid(),\n    text: \"this is my another note\",\n    date: \"19/10/23\"\n  }, {\n    id: nanoid(),\n    text: \"this is my I forgot note\",\n    date: \"21/10/23\"\n  }, {\n    id: nanoid(),\n    text: \"this is my that one note\",\n    date: \"23/10/23\"\n  }]);\n  const [searchText, SetSearchText] = useState('');\n  const addnote = text => {\n    const date = new Date();\n    const newnote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    const newnotes = [...notes, newnote];\n    setNotes(newnotes);\n  };\n  const deletenote = id => {\n    const newnotes = notes.filter(note => note.id !== id);\n    setNotes(newnotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Noteslist, {\n      notes: notes,\n      handleaddnote: addnote,\n      handledeletenote: deletenote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"SybbXJCOQUNLvWC8Ukb4FUv3U/Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Noteslist","nanoid","Search","jsxDEV","_jsxDEV","App","_s","notes","setNotes","id","text","date","searchText","SetSearchText","addnote","Date","newnote","toLocaleDateString","newnotes","deletenote","filter","note","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleaddnote","handledeletenote","_c","$RefreshReg$"],"sources":["/Users/daisuke/web dev/Notes app/notes/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Noteslist from \"./components/Noteslist\";\nimport {nanoid} from 'nanoid';\nimport Search from \"./components/Search\";\n\n\nconst App=()=> {\n  const [notes,setNotes] = useState([\n    {\n    id: nanoid(),\n    text: \"this is my first note\",\n    date: \"15/10/23\"\n    },\n    {\n    id: nanoid(),\n    text: \"this is my second note\",\n    date: \"17/10/23\"\n    },\n    {\n    id: nanoid(),\n    text: \"this is my another note\",\n    date: \"19/10/23\"\n    },\n    {\n    id: nanoid(),\n    text: \"this is my I forgot note\",\n    date: \"21/10/23\"\n    },\n    {\n    id: nanoid(),\n    text: \"this is my that one note\",\n    date: \"23/10/23\"\n    }\n  ]);\n\n  const [searchText, SetSearchText]= useState('');\n\n  const addnote =(text)=>{\n    const date = new Date();\n    const newnote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    };\n    const newnotes = [...notes,newnote];\n    setNotes(newnotes);\n  };\n  const deletenote = (id) =>{\n    const newnotes = notes.filter((note)=>note.id !== id);\n    setNotes(newnotes);\n  };\n\n  return (\n    <div className=\"container\">\n      <Search/>\n      <Noteslist\n        notes={notes}\n        handleaddnote={addnote}\n        handledeletenote = {deletenote}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAAQC,MAAM,QAAO,QAAQ;AAC7B,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,MAAMC,GAAG,GAACA,CAAA,KAAK;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAChC;IACAU,EAAE,EAAER,MAAM,CAAC,CAAC;IACZS,IAAI,EAAE,uBAAuB;IAC7BC,IAAI,EAAE;EACN,CAAC,EACD;IACAF,EAAE,EAAER,MAAM,CAAC,CAAC;IACZS,IAAI,EAAE,wBAAwB;IAC9BC,IAAI,EAAE;EACN,CAAC,EACD;IACAF,EAAE,EAAER,MAAM,CAAC,CAAC;IACZS,IAAI,EAAE,yBAAyB;IAC/BC,IAAI,EAAE;EACN,CAAC,EACD;IACAF,EAAE,EAAER,MAAM,CAAC,CAAC;IACZS,IAAI,EAAE,0BAA0B;IAChCC,IAAI,EAAE;EACN,CAAC,EACD;IACAF,EAAE,EAAER,MAAM,CAAC,CAAC;IACZS,IAAI,EAAE,0BAA0B;IAChCC,IAAI,EAAE;EACN,CAAC,CACF,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAEd,QAAQ,CAAC,EAAE,CAAC;EAE/C,MAAMe,OAAO,GAAGJ,IAAI,IAAG;IACrB,MAAMC,IAAI,GAAG,IAAII,IAAI,CAAC,CAAC;IACvB,MAAMC,OAAO,GAAG;MACdP,EAAE,EAAER,MAAM,CAAC,CAAC;MACZS,IAAI,EAAEA,IAAI;MACVC,IAAI,EAAEA,IAAI,CAACM,kBAAkB,CAAC;IAChC,CAAC;IACD,MAAMC,QAAQ,GAAG,CAAC,GAAGX,KAAK,EAACS,OAAO,CAAC;IACnCR,QAAQ,CAACU,QAAQ,CAAC;EACpB,CAAC;EACD,MAAMC,UAAU,GAAIV,EAAE,IAAI;IACxB,MAAMS,QAAQ,GAAGX,KAAK,CAACa,MAAM,CAAEC,IAAI,IAAGA,IAAI,CAACZ,EAAE,KAAKA,EAAE,CAAC;IACrDD,QAAQ,CAACU,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEd,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA,CAACF,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTvB,OAAA,CAACJ,SAAS;MACRO,KAAK,EAAEA,KAAM;MACbqB,aAAa,EAAEd,OAAQ;MACvBe,gBAAgB,EAAIV;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAArB,EAAA,CAxDKD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA0DT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}